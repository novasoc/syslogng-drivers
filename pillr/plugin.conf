python {
import sys,os
sys.path.insert(0, os.path.join(os.environ["SYSLOGNG_PREFIX"], "share/syslog-ng/include/scl/pillr/"))
#sys.path.append("/usr/lib/python3.8/site-packages/") # Set to local path for Python packages as needed
#sys.path.append("/usr/lib64/python3.8/site-packages/") # Set to local path for Python packages as needed
};

block parser StatsParser(
    event_regex()
    ip_regex()
    filters()
    alert_log()
    alert_filter()
    log_level()
    ...
)

{
    python(
        class("pillr.StatsParser")
        options(
            event_regex('`event_regex`')
            ip_regex_regex('`ip_regex`')
            filters('`filters`')
            alert_log('`alert_log`')
            alert_filter('`alert_filter`')
            log_level('`log_level`')
        )
        `__VARARGS__`
    );
};

block destination DedupAlerts(
    log_level()
    alerts_ini()
    state_db()
    stale_hours()
    mail_sender()
    mail_password()
    mail_server()
    mail_encryption()
    mail_port()
    mail_trust()
    mail_test_recipient()
    ...
)

{
    python(
        class("pillr.DedupAlerts")
        options(
            log_level('`log_level`')
            alerts_ini('`alerts_ini`')
            state_db('`state_db`')
            stale_hours('`stale_hours`')
            mail_sender('`mail_sender`')
            mail_password('`mail_password`')
            mail_server('`mail_server`')
            mail_encryption('`mail_encryption`')
            mail_port('`mail_port`')
            mail_trust('`mail_trust`')
            mail_test_recipient('`mail_test_recipient`')
        )
        `__VARARGS__`
    );
};
